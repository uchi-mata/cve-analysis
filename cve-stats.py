#!/usr/bin/env python3

import os
import json

def read_json_files(directory):
  for root, _, files in os.walk(directory):
    for file in files:
      if file.endswith('.json'):
        file_path = os.path.join(root, file)
        year = os.path.basename(os.path.dirname(os.path.dirname(file_path)))
        with open(file_path, 'r') as f:
          try:
            data = json.load(f)
            product = "n/a"
            vendor = "n/a"
            if data['cveMetadata']['state'] != "PUBLISHED":
              continue
            if data['cveMetadata']['state'] == "REJECTED":
              with open(f'results/rejected_{year}.txt', 'a') as rejected_file:
                rejected_file.write(f"{file_path}\n")
              continue


            if 'containers' in data and 'cna' in data['containers'] and 'affected' in data['containers']['cna']:
              # change that to go through entries and check if any product/vendor is n/a, accumulate
              for item in data['containers']['cna']['affected']:
                if 'product' in item and 'vendor' in item:
                    if item['product'] not in ['n/a', '-', 'None Available', 'Not a product']:
                      product = item['product']
                    if item['vendor'] not in ['n/a', '-', 'None Available', 'Not a product']:
                      vendor = item['vendor']
            elif 'containers' in data and 'adp' in data['containers'] and 'affected' in data['containers']['adp']:
              for item in data['containers']['adp']['affected']:
                if 'product' in item and 'vendor' in item:
                    if item['product'] not in ['n/a', '-', 'None Available', 'Not a product']:
                      product = item['product']
                    if item['vendor'] not in ['n/a', '-', 'None Available', 'Not a product']:
                      vendor = item['vendor']
            else:
              with open(f'to-review.txt', 'a') as noprod_file:
                noprod_file.write(f"{file_path}\n")

            if product not in ['n/a', '-', 'None Available', 'Not a product'] or vendor not in ['n/a', '-', 'None Available', 'Not a product']:
              with open(f'results/products_{year}.txt', 'a') as products_file:
                products_file.write(f"{item['vendor']}-{item['product']}\n")
              with open(f'results/vulns_{year}.txt', 'a') as vulns_file:
                vulns_file.write(f"{file_path}\n")
            else:                   
              with open(f'results/noprod_{year}.txt', 'a') as fail_file:
                fail_file.write(f"{file_path}\n")
          except json.JSONDecodeError as e:
            with open('errors.txt', 'a') as error_file:
              error_file.write(f"JSON decode error in file {file_path}: {e}\n")
          except Exception as e:
            with open('errors.txt', 'a') as error_file:
              error_file.write(f"Error processing file {file_path}: {e}\n")
            
            

if __name__ == "__main__":
  read_json_files('./cves')